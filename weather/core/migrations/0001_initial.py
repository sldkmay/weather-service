# Generated by Django 4.2.9 on 2025-07-03 15:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('tz_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
                ('icon_url', models.URLField(blank=True, null=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField()),
                ('temp_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('temp_f', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_day', models.BooleanField()),
                ('wind_mph', models.DecimalField(decimal_places=2, max_digits=5)),
                ('wind_kph', models.DecimalField(decimal_places=2, max_digits=5)),
                ('wind_degree', models.IntegerField()),
                ('wind_dir', models.CharField(max_length=10)),
                ('pressure_mb', models.DecimalField(decimal_places=2, max_digits=6)),
                ('pressure_in', models.DecimalField(decimal_places=2, max_digits=6)),
                ('precip_mm', models.DecimalField(decimal_places=2, max_digits=6)),
                ('precip_in', models.DecimalField(decimal_places=2, max_digits=6)),
                ('humidity', models.IntegerField()),
                ('cloud', models.IntegerField()),
                ('feelslike_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('feelslike_f', models.DecimalField(decimal_places=2, max_digits=5)),
                ('windchill_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('windchill_f', models.DecimalField(decimal_places=2, max_digits=5)),
                ('heatindex_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('heatindex_f', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dewpoint_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dewpoint_f', models.DecimalField(decimal_places=2, max_digits=5)),
                ('vis_km', models.DecimalField(decimal_places=2, max_digits=5)),
                ('vis_miles', models.DecimalField(decimal_places=2, max_digits=5)),
                ('uv', models.DecimalField(decimal_places=1, max_digits=3)),
                ('gust_mph', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gust_kph', models.DecimalField(decimal_places=2, max_digits=5)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather', to='core.city')),
                ('condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='weather_data', to='core.weathercondition')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_time', models.DateTimeField(auto_now_add=True)),
                ('alert_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='core.city')),
            ],
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField()),
                ('max_temp_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_temp_c', models.DecimalField(decimal_places=2, max_digits=5)),
                ('chance_of_rain', models.IntegerField(blank=True, null=True)),
                ('chance_of_snow', models.IntegerField(blank=True, null=True)),
                ('uv', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='core.city')),
                ('condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forecasts', to='core.weathercondition')),
            ],
        ),
        migrations.CreateModel(
            name='UserFavoriteCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fans', to='core.city')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_cities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'city')},
            },
        ),
    ]
