# Generated by Django 4.2.9 on 2025-09-26 17:26

from django.db import migrations, models


def dedupe_weatherdata(apps, schema_editor):
    WeatherData = apps.get_model('core', 'WeatherData')
    # Find cities with multiple WeatherData rows
    from django.db.models import Count
    duplicates = (
        WeatherData.objects.values('city_id')
        .annotate(total=models.Count('id'))
        .filter(total__gt=1)
    )
    for entry in duplicates:
        city_id = entry['city_id']
        rows = WeatherData.objects.filter(city_id=city_id).order_by('-last_updated', '-id')
        keep = rows.first()
        for duplicate in rows.exclude(id=keep.id):
            duplicate.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_userprofile'),
    ]

    operations = [
        migrations.RunPython(dedupe_weatherdata, migrations.RunPython.noop),
        migrations.AddConstraint(
            model_name='weatherdata',
            constraint=models.UniqueConstraint(fields=('city',), name='unique_weatherdata_per_city'),
        ),
    ]
